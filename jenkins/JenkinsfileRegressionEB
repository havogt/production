#!/usr/bin/env groovy

def methods
def machinesList
stage('Initialization') {
    node('master') {
        checkout scm
        def rootDir = pwd()
        methods = load("${rootDir}/jenkins/util.groovy")
        machinesList = load("${rootDir}/jenkins/Machines.groovy") 
    }
}

def userMessage = params.customMessage 
def machineConfigurations = [] 
stage('Machine Selection') {
    node('master') {    
        def machinesToRun = machinesList.findAll({methods.machineCheck(userMessage, it.name)})
        for (mach in machinesToRun) {
            machineConfigurations.add(
                [machine:mach, architectures: methods.getMachineConfiguration(
                        userMessage, mach.name, mach.archs as String[])])
        }
    }
}

def builds = [:]
stage('Build Stage') {
    for (mach in machineConfigurations) {
        def machine = mach.machine
        def architectures = mach.architectures
        def machineName = machine.name 
        for (architecture in architectures) {       
            def arch = architecture
            def machineLabel = arch == "" ? machineName : "${machineName}-${arch}"
            builds[machineLabel] = {
                node(machineName) {
                    checkout scm
                    def project_name = env.JOB_BASE_NAME.trim() 
                    def workingDir = sh(returnStdout: true, 
                                         script: 'echo $PWD').trim()
                    def scratch = sh(returnStdout: true, 
                                     script: 'echo $SCRATCH').trim()
                    def prefix = "$scratch/$project_name/$machineLabel"
                    def unuseFlag = "--unuse=${machine.unusePath}".replace('ARCH', arch)                    
                    def listFlag = "--list=$workingDir/jenkins-builds/$machineLabel"
                    def command = "$workingDir/jenkins-builds/production.sh $listFlag --prefix=$prefix $unuseFlag"
                    if (arch != '') 
                        command = "srun -u --constraint=$arch --job-name=$project_name --time=24:00:00 $workingDir/jenkins-builds/production.sh --arch=$arch $listFlag --prefix=$prefix $unuseFlag --xalt=no"
                    withEnv(["EASYBUILD_TMPDIR=$prefix/sources",
                             "EASYBUILD_SOURCEPATH=$prefix/sources"]) {
                                 sh("""status=0
                                       if [ -d $prefix]; then
                                           rm -rf $prefix/*
                                       fi
                                       $command
                                       status=\$[status+\$?]
                                       chmod -R o+r \$EASYBUILD_TMPDIR
                                       find \$EASYBUILD_TMPDIR -type d -exec chmod o+x '{}' \\;
                                       exit \$status""") 
                    }
                }
            }
        }
    }
    parallel builds
}
